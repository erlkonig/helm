apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prefect-agent.fullname" . }}
  labels:
    {{- include "prefect-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "prefect-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prefect-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.securityContext }}
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prefect-agent.serviceAccountName" . }}
      containers:
      - args:
        - prefect agent local start{{ if .Values.prefect.label }} -l {{ .Values.prefect.label }}{{ end }}
        command:
        - /bin/bash
        - -c
        env:
        - name: PREFECT__CLOUD__AGENT__AUTH_TOKEN
          value: ''
        - name: PREFECT__CLOUD__API
          value: https://api.prefect.io
        - name: NAMESPACE
          value: prefect-demo
        - name: IMAGE_PULL_SECRETS
          value: ''
        - name: PREFECT__CLOUD__AGENT__LABELS
          value: '[]'
        - name: JOB_MEM_REQUEST
          value: ''
        - name: JOB_MEM_LIMIT
          value: ''
        - name: JOB_CPU_REQUEST
          value: ''
        - name: JOB_CPU_LIMIT
          value: ''
        - name: IMAGE_PULL_POLICY
          value: ''
        - name: SERVICE_ACCOUNT_NAME
          value: ''
        - name: PREFECT__BACKEND
          value: cloud
        - name: PREFECT__CLOUD__AGENT__AGENT_ADDRESS
          value: http://:8080
        - name: PREFECT__CLOUD__API_KEY
          valueFrom:
            secretKeyRef:
              key: PREFECT__CLOUD__API_KEY
              name: {{ include "prefect-agent.fullname" . }}
        - name: PREFECT__CLOUD__TENANT_ID
          value: ''
        image: prefecthq/prefect
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 40
        name: agent
        {{- if and .Values.nfs .Values.nfs.claimName }}
        volumeMounts:
          - mountPath: /home/jovyan
            name: home
        {{- end }}
      {{- if and .Values.nfs }}
      volumes:
        - name: home
          nfs:
            path: /volume1/cqspace/home/{{.Release.Namespace}}
            server: cqnfs
      {{- end }}